{
    "version": 3,
    "file": "Common.js",
    "sourceRoot": "",
    "sources": [
        "/src/components/schema-editor/Common.tsx"
    ],
    "names": [],
    "mappings": "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",
    "sourcesContent": [
        "import React from 'react';\nimport {LocaleProps} from '../../locale';\nimport {ThemeProps} from '../../theme';\nimport type {JSONSchema} from '../../utils/DataScope';\nimport {autobind} from '../../utils/helper';\nimport Button from '../Button';\nimport Checkbox from '../Checkbox';\nimport {Icon} from '../icons';\nimport InputBox from '../InputBox';\nimport PickerContainer from '../PickerContainer';\nimport Select from '../Select';\n\nexport interface SchemaEditorItemCommonProps extends LocaleProps, ThemeProps {\n  value?: JSONSchema;\n  onChange: (value: JSONSchema) => void;\n  types: Array<{\n    label: string;\n    value: string;\n    [propName: string]: any;\n  }>;\n  onTypeChange?: (\n    type: string,\n    value: JSONSchema,\n    origin?: JSONSchema\n  ) => JSONSchema | void;\n  disabled?: boolean;\n  required?: boolean;\n  onRequiredChange?: (value: boolean) => void;\n  typeMutable?: boolean;\n  showInfo?: boolean;\n  renderExtraProps?: (\n    value: JSONSchema,\n    onChange: (value: JSONSchema) => void\n  ) => JSX.Element;\n  renderModalProps?: (\n    value: JSONSchema,\n    onChange: (value: JSONSchema) => void\n  ) => JSX.Element;\n  prefix?: JSX.Element;\n  affix?: JSX.Element;\n}\n\nexport class SchemaEditorItemCommon<\n  P extends SchemaEditorItemCommonProps = SchemaEditorItemCommonProps,\n  S = any\n> extends React.Component<P, S> {\n  @autobind\n  handleTypeChange(type: any) {\n    const {value, onChange, onTypeChange} = this.props;\n    let newValue: any = {\n      type,\n      title: value?.title\n    };\n\n    newValue = onTypeChange?.(type, newValue, value) ?? newValue;\n    onChange?.(newValue);\n  }\n\n  @autobind\n  handlePropsChange(newValue: JSONSchema) {\n    const {onChange, value} = this.props;\n    onChange?.({\n      ...value,\n      ...newValue\n    });\n  }\n\n  renderCommon() {\n    const {\n      value,\n      translate: __,\n      typeMutable,\n      disabled,\n      classnames: cx,\n      required,\n      onRequiredChange,\n      renderExtraProps,\n      renderModalProps,\n      prefix,\n      affix,\n      types\n    } = this.props;\n\n    return (\n      <>\n        {prefix}\n\n        <Select\n          options={types}\n          className={cx('SchemaEditor-type')}\n          value={value?.$ref || value?.type || 'string'}\n          onChange={this.handleTypeChange}\n          clearable={false}\n          disabled={disabled || typeMutable === false}\n          simpleValue\n        />\n\n        {onRequiredChange ? (\n          <Checkbox\n            className={cx('SchemaEditor-required')}\n            label={__('Required')}\n            value={required}\n            onChange={onRequiredChange}\n            disabled={disabled || typeMutable === false}\n          />\n        ) : null}\n\n        {renderExtraProps?.(value!, this.handlePropsChange)}\n\n        {renderModalProps ? (\n          <PickerContainer\n            value={value}\n            bodyRender={renderModalProps as any}\n            onConfirm={this.handlePropsChange}\n            size=\"md\"\n            title={__('SubForm.editDetail')}\n          >\n            {({onClick}) => (\n              <Button className={cx('SchemaEditor-btn')} onClick={onClick}>\n                <Icon icon=\"setting\" className=\"icon\" />\n              </Button>\n            )}\n          </PickerContainer>\n        ) : null}\n\n        {affix}\n      </>\n    );\n  }\n\n  render() {\n    const {classnames: cx} = this.props;\n    return <div className={cx('SchemaEditorItem')}>{this.renderCommon()}</div>;\n  }\n}\n"
    ]
}