/**
 * @file Tree
 * @description 树形组件
 * @author fex
 */
/// <reference types="hoist-non-react-statics" />
import React from 'react';
import { Option, Options } from './Select';
import { ThemeProps } from '../theme';
import { LocaleProps } from '../locale';
interface IDropIndicator {
    left: number;
    top: number;
    width: number;
    height?: number;
}
export interface IDropInfo {
    dragNode: Option | null;
    node: Option;
    position: 'top' | 'bottom' | 'self';
    indicator: IDropIndicator;
}
interface TreeSelectorProps extends ThemeProps, LocaleProps {
    highlightTxt?: string;
    onRef: any;
    showIcon?: boolean;
    initiallyOpen?: boolean;
    unfoldedLevel?: number;
    showRadio?: boolean;
    multiple?: boolean;
    disabled?: boolean;
    withChildren?: boolean;
    onlyChildren?: boolean;
    onlyLeaf?: boolean;
    labelField: string;
    valueField: string;
    iconField: string;
    unfoldedField: string;
    foldedField: string;
    disabledField: string;
    showOutline?: boolean;
    className?: string;
    itemClassName?: string;
    joinValues?: boolean;
    extractValue?: boolean;
    delimiter?: string;
    options: Options;
    value: any;
    onChange: Function;
    placeholder?: string;
    hideRoot?: boolean;
    rootLabel?: string;
    rootValue?: any;
    enableNodePath?: boolean;
    pathSeparator?: string;
    nodePath: any[];
    autoCheckChildren: boolean;
    cascade?: boolean;
    selfDisabledAffectChildren?: boolean;
    minLength?: number;
    maxLength?: number;
    bultinCUD?: boolean;
    rootCreatable?: boolean;
    rootCreateTip?: string;
    creatable?: boolean;
    createTip?: string;
    onAdd?: (idx?: number | Array<number>, value?: any, skipForm?: boolean) => void;
    editable?: boolean;
    editTip?: string;
    onEdit?: (value: Option, origin?: Option, skipForm?: boolean) => void;
    removable?: boolean;
    removeTip?: string;
    onDelete?: (value: Option) => void;
    onDeferLoad?: (option: Option) => void;
    onExpandTree?: (nodePathArr: any[]) => void;
    draggable?: boolean;
    onMove?: (dropInfo: IDropInfo) => void;
}
interface TreeSelectorState {
    value: Array<any>;
    inputValue: string;
    addingParent: Option | null;
    isAdding: boolean;
    isEditing: boolean;
    editingItem: Option | null;
    dropIndicator?: IDropIndicator;
}
export declare class TreeSelector extends React.Component<TreeSelectorProps, TreeSelectorState> {
    static defaultProps: {
        showIcon: boolean;
        showOutline: boolean;
        initiallyOpen: boolean;
        unfoldedLevel: number;
        showRadio: boolean;
        multiple: boolean;
        disabled: boolean;
        withChildren: boolean;
        onlyChildren: boolean;
        labelField: string;
        valueField: string;
        iconField: string;
        unfoldedField: string;
        foldedField: string;
        disabledField: string;
        joinValues: boolean;
        extractValue: boolean;
        delimiter: string;
        hideRoot: boolean;
        rootLabel: string;
        rootValue: number;
        autoCheckChildren: boolean;
        cascade: boolean;
        selfDisabledAffectChildren: boolean;
        rootCreateTip: string;
        createTip: string;
        editTip: string;
        removeTip: string;
        enableNodePath: boolean;
        pathSeparator: string;
        nodePath: never[];
    };
    unfolded: WeakMap<Object, boolean>;
    dragNode: Option | null;
    dropInfo: IDropInfo | null;
    startPoint: {
        x: number;
        y: number;
    };
    root: React.RefObject<HTMLDivElement>;
    constructor(props: TreeSelectorProps);
    componentDidMount(): void;
    componentDidUpdate(prevProps: TreeSelectorProps): void;
    /**
     * 展开懒加载节点的父节点
     */
    expandLazyLoadNodes(): void;
    syncUnFolded(props: TreeSelectorProps, unfoldedLevel?: number): WeakMap<Object, boolean>;
    toggleUnfolded(node: any): void;
    isUnfolded(node: any): boolean | undefined;
    clearSelect(): void;
    /**
     * enableNodePath为true时，将label和value转换成node path格式
     */
    transform2NodePath(value: any): any;
    handleSelect(node: any, value?: any): void;
    handleCheck(item: any, checked: boolean): void;
    handleAdd(parent?: Option | null): void;
    handleEdit(item: Option): void;
    handleRemove(item: Option): void;
    handleInputChange(e: React.ChangeEvent<HTMLInputElement>): void;
    handleConfirm(): void;
    handleCancel(): void;
    renderInput(prfix?: JSX.Element | null): JSX.Element;
    getOffsetPosition(element: HTMLElement): {
        left: number;
        top: number;
    };
    getDropInfo(e: React.DragEvent<Element>, node: Option): IDropInfo;
    updateDropIndicator(e: React.DragEvent<Element>, node: Option): void;
    onDragStart(node: Option): (e: React.DragEvent<Element>) => void;
    onDragOver(node: Option): (e: React.DragEvent<Element>) => void;
    onDragEnd(dragNode: Option): (e: React.DragEvent<Element>) => void;
    renderList(list: Options, value: Option[], uncheckable: boolean): {
        dom: Array<JSX.Element | null>;
        childrenChecked: number;
    };
    render(): JSX.Element;
}
declare const _default: {
    new (props: Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
        showIcon: boolean;
        showOutline: boolean;
        initiallyOpen: boolean;
        unfoldedLevel: number;
        showRadio: boolean;
        multiple: boolean;
        disabled: boolean;
        withChildren: boolean;
        onlyChildren: boolean;
        labelField: string;
        valueField: string;
        iconField: string;
        unfoldedField: string;
        foldedField: string;
        disabledField: string;
        joinValues: boolean;
        extractValue: boolean;
        delimiter: string;
        hideRoot: boolean;
        rootLabel: string;
        rootValue: number;
        autoCheckChildren: boolean;
        cascade: boolean;
        selfDisabledAffectChildren: boolean;
        rootCreateTip: string;
        createTip: string;
        editTip: string;
        removeTip: string;
        enableNodePath: boolean;
        pathSeparator: string;
        nodePath: never[];
    }, never>> & {
        locale?: string | undefined;
        translate?: ((str: string, ...args: any[]) => string) | undefined;
    }, keyof ThemeProps> & import("../theme").ThemeOutterProps): {
        ref: any;
        childRef(ref: any): void;
        getWrappedInstance(): any;
        render(): JSX.Element;
        context: any;
        setState<K extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps>) => {} | Pick<{}, K> | null) | Pick<{}, K> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<Omit<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }, keyof ThemeProps> & import("../theme").ThemeOutterProps>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    contextType: React.Context<string>;
    ComposedComponent: React.ComponentType<{
        new (props: Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }): {
            ref: any;
            childRef(ref: any): void;
            getWrappedInstance(): any;
            render(): JSX.Element;
            context: any;
            setState<K_1 extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>) => {} | Pick<{}, K_1> | null) | Pick<{}, K_1> | null, callback?: (() => void) | undefined): void;
            forceUpdate(callback?: (() => void) | undefined): void;
            readonly props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }> & Readonly<{
                children?: React.ReactNode;
            }>;
            state: Readonly<{}>;
            refs: {
                [key: string]: React.ReactInstance;
            };
            componentDidMount?(): void;
            shouldComponentUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): boolean;
            componentWillUnmount?(): void;
            componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
            getSnapshotBeforeUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, prevState: Readonly<{}>): any;
            componentDidUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, prevState: Readonly<{}>, snapshot?: any): void;
            componentWillMount?(): void;
            UNSAFE_componentWillMount?(): void;
            componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextContext: any): void;
            UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextContext: any): void;
            componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): void;
            UNSAFE_componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): void;
        };
        displayName: string;
        contextType: React.Context<string>;
        ComposedComponent: React.ComponentType<typeof TreeSelector>;
    } & import("hoist-non-react-statics").NonReactStatics<typeof TreeSelector, {}> & {
        ComposedComponent: typeof TreeSelector;
    }>;
} & import("hoist-non-react-statics").NonReactStatics<{
    new (props: Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
        showIcon: boolean;
        showOutline: boolean;
        initiallyOpen: boolean;
        unfoldedLevel: number;
        showRadio: boolean;
        multiple: boolean;
        disabled: boolean;
        withChildren: boolean;
        onlyChildren: boolean;
        labelField: string;
        valueField: string;
        iconField: string;
        unfoldedField: string;
        foldedField: string;
        disabledField: string;
        joinValues: boolean;
        extractValue: boolean;
        delimiter: string;
        hideRoot: boolean;
        rootLabel: string;
        rootValue: number;
        autoCheckChildren: boolean;
        cascade: boolean;
        selfDisabledAffectChildren: boolean;
        rootCreateTip: string;
        createTip: string;
        editTip: string;
        removeTip: string;
        enableNodePath: boolean;
        pathSeparator: string;
        nodePath: never[];
    }, never>> & {
        locale?: string | undefined;
        translate?: ((str: string, ...args: any[]) => string) | undefined;
    }): {
        ref: any;
        childRef(ref: any): void;
        getWrappedInstance(): any;
        render(): JSX.Element;
        context: any;
        setState<K_1 extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>) => {} | Pick<{}, K_1> | null) | Pick<{}, K_1> | null, callback?: (() => void) | undefined): void;
        forceUpdate(callback?: (() => void) | undefined): void;
        readonly props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }> & Readonly<{
            children?: React.ReactNode;
        }>;
        state: Readonly<{}>;
        refs: {
            [key: string]: React.ReactInstance;
        };
        componentDidMount?(): void;
        shouldComponentUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): boolean;
        componentWillUnmount?(): void;
        componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
        getSnapshotBeforeUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, prevState: Readonly<{}>): any;
        componentDidUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, prevState: Readonly<{}>, snapshot?: any): void;
        componentWillMount?(): void;
        UNSAFE_componentWillMount?(): void;
        componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextContext: any): void;
        UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextContext: any): void;
        componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): void;
        UNSAFE_componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }>, nextState: Readonly<{}>, nextContext: any): void;
    };
    displayName: string;
    contextType: React.Context<string>;
    ComposedComponent: React.ComponentType<typeof TreeSelector>;
} & import("hoist-non-react-statics").NonReactStatics<typeof TreeSelector, {}> & {
    ComposedComponent: typeof TreeSelector;
}, {}> & {
    ComposedComponent: {
        new (props: Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
            showIcon: boolean;
            showOutline: boolean;
            initiallyOpen: boolean;
            unfoldedLevel: number;
            showRadio: boolean;
            multiple: boolean;
            disabled: boolean;
            withChildren: boolean;
            onlyChildren: boolean;
            labelField: string;
            valueField: string;
            iconField: string;
            unfoldedField: string;
            foldedField: string;
            disabledField: string;
            joinValues: boolean;
            extractValue: boolean;
            delimiter: string;
            hideRoot: boolean;
            rootLabel: string;
            rootValue: number;
            autoCheckChildren: boolean;
            cascade: boolean;
            selfDisabledAffectChildren: boolean;
            rootCreateTip: string;
            createTip: string;
            editTip: string;
            removeTip: string;
            enableNodePath: boolean;
            pathSeparator: string;
            nodePath: never[];
        }, never>> & {
            locale?: string | undefined;
            translate?: ((str: string, ...args: any[]) => string) | undefined;
        }): {
            ref: any;
            childRef(ref: any): void;
            getWrappedInstance(): any;
            render(): JSX.Element;
            context: any;
            setState<K_1 extends never>(state: {} | ((prevState: Readonly<{}>, props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>) => {} | Pick<{}, K_1> | null) | Pick<{}, K_1> | null, callback?: (() => void) | undefined): void;
            forceUpdate(callback?: (() => void) | undefined): void;
            readonly props: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }> & Readonly<{
                children?: React.ReactNode;
            }>;
            state: Readonly<{}>;
            refs: {
                [key: string]: React.ReactInstance;
            };
            componentDidMount?(): void;
            shouldComponentUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): boolean;
            componentWillUnmount?(): void;
            componentDidCatch?(error: Error, errorInfo: React.ErrorInfo): void;
            getSnapshotBeforeUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, prevState: Readonly<{}>): any;
            componentDidUpdate?(prevProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, prevState: Readonly<{}>, snapshot?: any): void;
            componentWillMount?(): void;
            UNSAFE_componentWillMount?(): void;
            componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextContext: any): void;
            UNSAFE_componentWillReceiveProps?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextContext: any): void;
            componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): void;
            UNSAFE_componentWillUpdate?(nextProps: Readonly<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "classPrefix" | "classnames" | "className" | "theme" | "value" | "maxLength" | "minLength" | "onEdit" | "onAdd" | "onDelete" | "options" | "placeholder" | "draggable" | "onChange" | "itemClassName" | "removable" | "creatable" | "editable" | "onRef" | "onlyLeaf" | "rootCreatable" | "onDeferLoad" | "highlightTxt" | "bultinCUD" | "onExpandTree" | "onMove"> & Partial<Pick<Omit<TreeSelectorProps, keyof LocaleProps>, "disabled" | "multiple" | "showIcon" | "delimiter" | "valueField" | "labelField" | "joinValues" | "extractValue" | "hideRoot" | "rootLabel" | "rootValue" | "cascade" | "withChildren" | "onlyChildren" | "enableNodePath" | "pathSeparator" | "showOutline" | "autoCheckChildren" | "unfoldedField" | "foldedField" | "initiallyOpen" | "unfoldedLevel" | "showRadio" | "iconField" | "disabledField" | "nodePath" | "selfDisabledAffectChildren" | "rootCreateTip" | "createTip" | "editTip" | "removeTip">> & Partial<Pick<{
                showIcon: boolean;
                showOutline: boolean;
                initiallyOpen: boolean;
                unfoldedLevel: number;
                showRadio: boolean;
                multiple: boolean;
                disabled: boolean;
                withChildren: boolean;
                onlyChildren: boolean;
                labelField: string;
                valueField: string;
                iconField: string;
                unfoldedField: string;
                foldedField: string;
                disabledField: string;
                joinValues: boolean;
                extractValue: boolean;
                delimiter: string;
                hideRoot: boolean;
                rootLabel: string;
                rootValue: number;
                autoCheckChildren: boolean;
                cascade: boolean;
                selfDisabledAffectChildren: boolean;
                rootCreateTip: string;
                createTip: string;
                editTip: string;
                removeTip: string;
                enableNodePath: boolean;
                pathSeparator: string;
                nodePath: never[];
            }, never>> & {
                locale?: string | undefined;
                translate?: ((str: string, ...args: any[]) => string) | undefined;
            }>, nextState: Readonly<{}>, nextContext: any): void;
        };
        displayName: string;
        contextType: React.Context<string>;
        ComposedComponent: React.ComponentType<typeof TreeSelector>;
    } & import("hoist-non-react-statics").NonReactStatics<typeof TreeSelector, {}> & {
        ComposedComponent: typeof TreeSelector;
    };
};
export default _default;
